@model mostlylucid.pagingtaghelper.Models.TagModels.PageSizeModel
@{
    var pagerId = Model.PagerId;
    var htmxAttributes = "";

    if (Model.UseHtmx)
    {
        htmxAttributes = $"hx-get=\"{Model.LinkUrl}\"  hx-push-url=\"true\"";
    }
    else
    {
        <input class="linkUrl" type="hidden" value="@Model.LinkUrl" />
    }
}
<div class="me-3 page-size-container">
    <input type="hidden" class="useHtmx" value="@Model.UseHtmx.ToString().ToLowerInvariant()"/>
    <label for="pageSize-@pagerId" class="form-label me-2">Page size:</label>
    <select id="pageSize-@pagerId" name="pageSize" class="form-select form-select-sm d-inline w-auto" @Html.Raw(htmxAttributes)>
        @foreach (var option in Model.PageSizes)
        {
            <option value="@option" selected="@(option == Model.PageSize ? "selected" : null)">@option</option>
        }
    </select>
</div>

@if (Model.UseHtmx)
{
    <script>
    window.__pageSizeListenerAdded = window.__pageSizeListenerAdded || false;

    if (!window.__pageSizeListenerAdded) {
        document.addEventListener('htmx:configRequest', (event) => {
            const urlParams = new URLSearchParams(window.location.search);
            const triggeringElt = event.detail.elt;

            if (triggeringElt && triggeringElt.matches('[name="pageSize"]')) {
                // Remove old pageSize, it'll be replaced by new selection
                urlParams.delete('pageSize');

                // Include the newly selected pageSize explicitly
                urlParams.set('pageSize', triggeringElt.value);

                // Set parameters explicitly on the request URL
                event.detail.parameters = {};
                urlParams.forEach((value, key) => {
                    event.detail.parameters[key] = value;
                });
            }
        });

        window.__pageSizeListenerAdded = true;
    }
</script>
}