@addTagHelper *, mostlylucid.pagingtaghelper
@using mostlylucid.pagingtaghelper.Extensions
@model mostlylucid.pagingtaghelper.Models.TagModels.PagerViewModel
@{
    var totalPages = Model.TotalPages;
    string GetUrl(int page) => Context.BuildPagedUrl(Model.LinkUrl ?? "", page, Model.PageSize, Model.SearchTerm, Model.OrderBy, Model.Descending);
}


    <div class="d-flex flex-wrap align-items-center justify-content-center mt-3">
        @if (Model.ShowPageSize)
        {
            <page-size page-size-model="Model"></page-size>
        }
        @if (totalPages > 1)
        {
            <text>
        <nav aria-label="Pagination">
            <ul class="pagination pagination-sm mb-0">
                @if (Model.FirstLastNavigation && Model.Page > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="@($"{Model.LinkUrl}?page=1&pageSize={Model.PageSize}")">@Model.FirstPageText</a>
                    </li>
                }

                @if (Model.Page > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="@($"{Model.LinkUrl}?page={Model.Page - 1}&pageSize={Model.PageSize}")">@Model.PreviousPageText</a>
                    </li>
                }

                @if (Model.SkipForwardBackNavigation && Model.Page > Model.PagesToDisplay)
                {
                    <li class="page-item disabled">
                        <span class="page-link">@Model.SkipBackText</span>
                    </li>
                }

                @{
                    int halfDisplay = Model.PagesToDisplay / 2;
                    int startPage = Math.Max(1, Model.Page - halfDisplay);
                    int endPage = Math.Min(totalPages, startPage + Model.PagesToDisplay - 1);
                    startPage = Math.Max(1, endPage - Model.PagesToDisplay + 1);
                }

                @for (int i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(i == Model.Page ? "active" : "")">
                        <a class="page-link" href="@($"{Model.LinkUrl}?page={i}&pageSize={Model.PageSize}")">@i</a>
                    </li>
                }

                @if (Model.SkipForwardBackNavigation && Model.Page < totalPages - Model.PagesToDisplay + 1)
                {
                    <li class="page-item disabled">
                        <span class="page-link">@Model.SkipForwardText</span>
                    </li>
                }

                @if (Model.Page < totalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="@($"{Model.LinkUrl}?page={Model.Page + 1}&pageSize={Model.PageSize}")">@Model.NextPageText</a>
                    </li>
                }

                @if (Model.FirstLastNavigation && Model.Page < totalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="@($"{Model.LinkUrl}?page={totalPages}&pageSize={Model.PageSize}")">@Model.LastPageText</a>
                    </li>
                }
            </ul>
        </nav>

        <div class="ms-3 text-muted small">
            Page @Model.Page of @totalPages (Total items: @Model.TotalItems)
        </div>
        </text>
        }
    </div>